C51 COMPILER V9.60.0.0   USER                                                              07/11/2021 00:07:20 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE USER
OBJECT MODULE PLACED IN .\Objects\user.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\user.c LARGE WARNINGLEVEL(1) OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\ES
                    -C51_sdk\es_sdkstatrt;..\..\ESC51_sdk\OFC_Driver\header;..\..\ESC51_sdk\HW_Support\header;..\..\ESC51_sdk\SW_Support\head
                    -er;..\..\ESC51_project;..\..\ESC51_sdk) DEBUG OBJECTEXTEND PRINT(.\Listings\user.lst) OBJECT(.\Objects\user.obj)

line level    source

   1          #include "es_sys_package.h"
   2          
   3          int mm = 0;
   4          int nn = 0;
   5          int jj = 0;
   6          
   7          sbit LED1 = P1^0;
   8          sbit LED2 = P1^1;
   9          sbit LED3 = P1^2;
  10          sbit LED4 = P1^3;
  11          sbit LED5 = P1^4;
  12          sbit LED6 = P1^5;
  13          sbit LED7 = P1^6;
  14          sbit LED8 = P1^7;
  15          
  16          static void test (void* arg)
  17          {
  18   1              mm++;
  19   1              if (mm == 60) {
  20   2                      P2 = ~P2;
  21   2                      mm = 0;
  22   2              }
  23   1              
  24   1      }
  25          
  26          
  27          void test1 (void* arg)
  28          {
  29   1              P0 = ~P0;
  30   1      }
  31          
  32          
  33          void test2 (void* arg)
  34          {
  35   1              nn++;
  36   1              if (nn == 100) {
  37   2                      P2 = ~P2;
  38   2                      nn = 0;
  39   2              }
  40   1      }
  41          
  42          void test3 (void* arg)
  43          {
  44   1              jj++;
  45   1              if (jj == 40) {
  46   2                      P3 = ~P3;
  47   2                      jj = 0;
  48   2              }
  49   1      }
  50          
  51          
  52          void led1(void* arg)
  53          {
C51 COMPILER V9.60.0.0   USER                                                              07/11/2021 00:07:20 PAGE 2   

  54   1              LED1 = ~LED1;
  55   1      }
  56          
  57          void led2(void* arg)
  58          {
  59   1              LED2 = ~LED2;
  60   1      }
  61          
  62          void led3(void* arg)
  63          {
  64   1              LED3 = ~LED3;
  65   1      }
  66          
  67          void led4(void* arg)
  68          {
  69   1              LED4 = ~LED4;
  70   1      }
  71          
  72          void led5(void* arg)
  73          {
  74   1              LED5 = ~LED5;
  75   1      }
  76          
  77          void led6(void* arg)
  78          {
  79   1              LED6 = ~LED6;
  80   1      }
  81          
  82          
  83          //SOFTTIMER_OBJ_DECL(LD1);
  84          //SOFTTIMER_OBJ_DECL(LD2);
  85          //SOFTTIMER_OBJ_DECL(LD3);
  86          //SOFTTIMER_OBJ_DECL(LD4);
  87          //PWMGROUP_OBJ_DECL(PWM1);
  88          //PWMGROUP_OBJ_DECL(PWM2);
  89          //PWMGROUP_OBJ_DECL(PWM3);
  90          //PWMGROUP_OBJ_DECL(PWM4);
  91          
  92          void es_main(void)
  93          {
  94   1      
  95   1      //      GTIMER_OBJ_DECL_STATIC(GTimer2);
  96   1      //      GTIMER_OBJ_DECL_STATIC(GTimer3);
  97   1      //      GTIMER_OBJ_DECL_STATIC(GTimer1);
  98   1      //      GTIMER_OBJ_DECL_STATIC(GTimer4);
  99   1      //      
 100   1      //      
 101   1      //      
 102   1      //      
 103   1      //      GTIMER_OBJ_INIT_STATIC(GTimer2, test, NULL);
 104   1      //      GTIMER_OBJ_JOIN(GTimer2);
 105   1      //      GTIMER_OBJ_RUN(GTimer2);
 106   1      //      
 107   1      //      GTIMER_OBJ_INIT_STATIC(GTimer3, test2, NULL);
 108   1      //      GTIMER_OBJ_JOIN(GTimer3);
 109   1      //      GTIMER_OBJ_RUN(GTimer3);
 110   1      
 111   1      //      GTIMER_OBJ_INIT_STATIC(GTimer1, test3, NULL);
 112   1      //      GTIMER_OBJ_JOIN(GTimer1);
 113   1      //      GTIMER_OBJ_RUN(GTimer1);
 114   1      //      
 115   1      //      GTIMER_OBJ_INIT_STATIC(GTimer4, test1, NULL);
C51 COMPILER V9.60.0.0   USER                                                              07/11/2021 00:07:20 PAGE 3   

 116   1      //      GTIMER_OBJ_JOIN(GTimer4);
 117   1      //      GTIMER_OBJ_RUN(GTimer4);
 118   1      //      
 119   1      //      SOFTTIMER_OBJ_INIT(LD1, led1, NULL, 500);
 120   1      //      SOFTTIMER_OBJ_INIT(LD2, led2, NULL, 500);
 121   1      //      SOFTTIMER_OBJ_INIT(LD3, led3, NULL, 500);
 122   1      //      SOFTTIMER_OBJ_INIT(LD4, led4, NULL, 500);
 123   1      //      
 124   1      //      SOFTTIMER_OBJ_JOIN(LD1);
 125   1      //      SOFTTIMER_OBJ_JOIN(LD2);
 126   1      //      SOFTTIMER_OBJ_JOIN(LD3);
 127   1      //      SOFTTIMER_OBJ_JOIN(LD4);
 128   1      //      
 129   1      //      SOFTTIMER_OBJ_RUN(LD1);
 130   1      //      SOFTTIMER_OBJ_RUN(LD2);
 131   1      //      SOFTTIMER_OBJ_RUN(LD3);
 132   1      //      SOFTTIMER_OBJ_RUN(LD4);
 133   1              
 134   1              
 135   1      //      PWMGROUP_OBJ_INIT(PWM1, IO_P1, IO_Bit4, 50);
 136   1      //      PWMGROUP_OBJ_INIT(PWM2, IO_P1, IO_Bit5, 90);
 137   1      //      PWMGROUP_OBJ_INIT(PWM3, IO_P1, IO_Bit6, 50);
 138   1      //      PWMGROUP_OBJ_INIT(PWM4, IO_P1, IO_Bit7, 10);
 139   1      //      
 140   1      //      PWMGROUP_OBJ_JOIN(PWM1);
 141   1      //      PWMGROUP_OBJ_JOIN(PWM2);
 142   1      //      PWMGROUP_OBJ_JOIN(PWM3);
 143   1      //      PWMGROUP_OBJ_JOIN(PWM4);
 144   1      //
 145   1      //      PWMGROUP_OBJ_RUN(PWM1);
 146   1      //      PWMGROUP_OBJ_RUN(PWM4);
 147   1      //      PWMGROUP_OBJ_RUN(PWM2);
 148   1      //      PWMGROUP_OBJ_RUN(PWM3);
 149   1              
 150   1              PFM_Init(100);
 151   1              PFM_Start();
 152   1              PFM_SetFrq(2000);
 153   1      
 154   1              while (1)
 155   1              {
 156   2                      
 157   2                      
 158   2              }
 159   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    259    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      6      30
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
